/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";

export default function Seated({ ...props }) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/Seated-transformed.glb");
  const { actions } = useAnimations(animations, group);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="World" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group name="_kgreyV2greeneyesnormaltattoo">
            <group name="RootNode1">
              <group
                name="Eye_002"
                position={[7.88, 6.93, -179.4]}
                rotation={[-Math.PI / 2, 0, 0.85]}
                scale={5.99}
              />
              <group
                name="Eye_003"
                position={[-7.34, 6.98, -179.42]}
                rotation={[-Math.PI / 2, 0, 0.85]}
                scale={5.99}
              />
              <group
                name="MaleBaseMesh"
                rotation={[-Math.PI / 2, 0, 0]}
                scale={100}
              />
              <group
                name="MaleBaseMesh_001"
                rotation={[-Math.PI / 2, 0, 0]}
                scale={100}
              />
              <group
                name="MaleBaseMesh_002"
                rotation={[-Math.PI / 2, 0, 0]}
                scale={100}
              />
            </group>
          </group>
        </group>
        <group
          name="SkinnedMeshes"
          rotation={[Math.PI / 2, 0, 0]}
          scale={0.01}
        />
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh
            name="MaleBaseMesh1"
            geometry={nodes.MaleBaseMesh1.geometry}
            material={materials.Material_013}
            skeleton={nodes.MaleBaseMesh1.skeleton}
          />
          <skinnedMesh
            name="MaleBaseMesh1_Baked"
            geometry={nodes.MaleBaseMesh1_Baked.geometry}
            material={materials.Material_013}
            skeleton={nodes.MaleBaseMesh1_Baked.skeleton}
          />
          <skinnedMesh
            name="MaleBaseMesh_0011"
            geometry={nodes.MaleBaseMesh_0011.geometry}
            material={materials.Material_010}
            skeleton={nodes.MaleBaseMesh_0011.skeleton}
          />
          <skinnedMesh
            name="MaleBaseMesh_0011_Baked"
            geometry={nodes.MaleBaseMesh_0011_Baked.geometry}
            material={materials.Material_010}
            skeleton={nodes.MaleBaseMesh_0011_Baked.skeleton}
          />
          <skinnedMesh
            name="MaleBaseMesh_0021"
            geometry={nodes.MaleBaseMesh_0021.geometry}
            material={materials.Material_008}
            skeleton={nodes.MaleBaseMesh_0021.skeleton}
          />
          <skinnedMesh
            name="MaleBaseMesh_0021_Baked"
            geometry={nodes.MaleBaseMesh_0021_Baked.geometry}
            material={materials.Material_008}
            skeleton={nodes.MaleBaseMesh_0021_Baked.skeleton}
          />
          <skinnedMesh
            name="Sphere_001"
            geometry={nodes.Sphere_001.geometry}
            material={materials.Material_012}
            skeleton={nodes.Sphere_001.skeleton}
          />
          <skinnedMesh
            name="Sphere_001_Baked"
            geometry={nodes.Sphere_001_Baked.geometry}
            material={materials.Material_012}
            skeleton={nodes.Sphere_001_Baked.skeleton}
          />
          <skinnedMesh
            name="Sphere_004"
            geometry={nodes.Sphere_004.geometry}
            material={materials.Material_0120}
            skeleton={nodes.Sphere_004.skeleton}
          />
          <skinnedMesh
            name="Sphere_004_Baked"
            geometry={nodes.Sphere_004_Baked.geometry}
            material={materials.Material_0120}
            skeleton={nodes.Sphere_004_Baked.skeleton}
          />
        </group>
      </group>
    </group>
  );
}

// useGLTF.preload("/Seated-transformed.glb");
