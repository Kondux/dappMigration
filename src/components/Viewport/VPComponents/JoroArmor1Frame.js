/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect, useState } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";

export default function JoroArmor1Frame({
  avatarType,
  eyecolor,
  color,
  armor,
  skin,
  head,
  weapon,
  armorVariant,
  animationClip,
  isPlaying,
  ...props
}) {
  const group = useRef();
  const [armorVariantDir, setArmorVariantDir] = useState(
    "/Assets/JoroGlow.glb"
  );

  const [animationDir, setAnimationDir] = useState(
    "/Assets/JoroSpinAnimation.glb"
  );

  //This is from frame
  const { nodes } = useGLTF("/Assets/JoroArmor1Frame.glb");

  //This is from armor 1 only
  const { materials } = useGLTF(`${armorVariantDir}`);

  // This is from animation glb
  const { animations } = useGLTF(`${animationDir}`);
  // const { animations } = useGLTF("/Assets/JoroSpinAnimation.glb");
  // const { animations } = useGLTF("/Assets/JoroAnimation.glb");
  const { actions } = useAnimations(animations, group);

  // This triggers when animation is changed
  useEffect(() => {
    if (animationClip === "Idle") {
      setAnimationDir("/Assets/JoroSpinAnimation.glb");
      // setAnimationDir("/Assets/JoroAnimation.glb");
    } else {
      setAnimationDir("/Assets/JoroAnimation.glb");
      // setAnimationDir("/Assets/JoroSpinAnimation.glb");
    }
  }, [animationClip]);

  // This triggers when armor is changed
  useEffect(() => {
    setTimeout(() => {
      // actions["CC_Base|FBXExportClip_0.001"].setEffectiveWeight(1);
      actions["KahnV2YelloNano|FBXExportClip_0"].reset().play();
    }, 0);
  }, [avatarType, armor]);

  // This triggers when armor vairant is changed
  useEffect(() => {
    if (armorVariant === "Black") {
      // setArmorVariantDir("/Assets/JoroArmorOnly.glb");
      setArmorVariantDir("/Assets/JoroGlow.glb");
    } else {
      setArmorVariantDir("/Assets/JoroWhiteArmorOnlyMaterial.glb");
    }
  }, [armorVariant]);

  useEffect(() => {
    // console.log("This is BAYC MODEL materials", materials);
    console.log("This is BAYC MODEL ACTIONS", actions);
    console.log("This is isPlaying", isPlaying);
    console.log("This is animationClip", animationClip);
    if (isPlaying === true) {
      setTimeout(() => {
        console.log("1 clip");
        // actions["KahnV2YelloNano|FBXExportClip_0"].setEffectiveWeight(1);

        actions["KahnV2YelloNano|FBXExportClip_0"].setEffectiveTimeScale(1);
        actions["KahnV2YelloNano|FBXExportClip_0"].reset().play();
      }, 0);
    } else {
      setTimeout(() => {
        console.log("2 clip");
        // actions["CC_Base|FBXExportClip_0.001"].setEffectiveWeight(1);
        actions["KahnV2YelloNano|FBXExportClip_0"].setEffectiveTimeScale(0);
        actions["KahnV2YelloNano|FBXExportClip_0"].reset().play();
      }, 0);
    }

    setTimeout(() => {
      // actions["CC_Base|FBXExportClip_0.001"].setEffectiveWeight(1);
      actions["KahnV2YelloNano|FBXExportClip_0"].reset().play();
    }, 0);
  }, [animationClip, isPlaying]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="KahnV2YelloNano" scale={0.1}>
          <primitive object={nodes.CC_Base_BoneRoot} />
          <skinnedMesh
            castShadow
            receiveShadow
            frustumCulled={false}
            name="Nano_M_Suit_H"
            geometry={nodes.Nano_M_Suit_H.geometry}
            material={materials.Nano_M_Suit_H_Merge}
            skeleton={nodes.Nano_M_Suit_H.skeleton}
          />
          {/* <group name="CC_Base_Body">
            <skinnedMesh
              castShadow
              receiveShadow
              frustumCulled={false}
              name="CC_Base_Body_1"
              geometry={nodes.CC_Base_Body_1.geometry}
              material={materials.Std_Skin_Head}
              skeleton={nodes.CC_Base_Body_1.skeleton}
              morphTargetDictionary={nodes.CC_Base_Body_1.morphTargetDictionary}
              morphTargetInfluences={nodes.CC_Base_Body_1.morphTargetInfluences}
            />
            <skinnedMesh
              castShadow
              receiveShadow
              frustumCulled={false}
              name="CC_Base_Body_2"
              geometry={nodes.CC_Base_Body_2.geometry}
              material={materials.Std_Skin_Body}
              skeleton={nodes.CC_Base_Body_2.skeleton}
              morphTargetDictionary={nodes.CC_Base_Body_2.morphTargetDictionary}
              morphTargetInfluences={nodes.CC_Base_Body_2.morphTargetInfluences}
            />
            <skinnedMesh
              castShadow
              receiveShadow
              frustumCulled={false}
              name="CC_Base_Body_3"
              geometry={nodes.CC_Base_Body_3.geometry}
              material={materials.Std_Skin_Arm}
              skeleton={nodes.CC_Base_Body_3.skeleton}
              morphTargetDictionary={nodes.CC_Base_Body_3.morphTargetDictionary}
              morphTargetInfluences={nodes.CC_Base_Body_3.morphTargetInfluences}
            />
            <skinnedMesh
              castShadow
              receiveShadow
              frustumCulled={false}
              name="CC_Base_Body_4"
              geometry={nodes.CC_Base_Body_4.geometry}
              material={materials.Std_Skin_Leg}
              skeleton={nodes.CC_Base_Body_4.skeleton}
              morphTargetDictionary={nodes.CC_Base_Body_4.morphTargetDictionary}
              morphTargetInfluences={nodes.CC_Base_Body_4.morphTargetInfluences}
            />
            <skinnedMesh
              castShadow
              receiveShadow
              frustumCulled={false}
              name="CC_Base_Body_5"
              geometry={nodes.CC_Base_Body_5.geometry}
              material={materials.Std_Nails}
              skeleton={nodes.CC_Base_Body_5.skeleton}
              morphTargetDictionary={nodes.CC_Base_Body_5.morphTargetDictionary}
              morphTargetInfluences={nodes.CC_Base_Body_5.morphTargetInfluences}
            />
            <skinnedMesh
              castShadow
              receiveShadow
              frustumCulled={false}
              name="CC_Base_Body_6"
              geometry={nodes.CC_Base_Body_6.geometry}
              material={materials.Std_Eyelash}
              skeleton={nodes.CC_Base_Body_6.skeleton}
              morphTargetDictionary={nodes.CC_Base_Body_6.morphTargetDictionary}
              morphTargetInfluences={nodes.CC_Base_Body_6.morphTargetInfluences}
            />
          </group>
          <group name="CC_Base_Teeth">
            <skinnedMesh
              castShadow
              receiveShadow
              frustumCulled={false}
              name="CC_Base_Teeth_1"
              geometry={nodes.CC_Base_Teeth_1.geometry}
              material={materials.Std_Upper_Teeth}
              skeleton={nodes.CC_Base_Teeth_1.skeleton}
              morphTargetDictionary={
                nodes.CC_Base_Teeth_1.morphTargetDictionary
              }
              morphTargetInfluences={
                nodes.CC_Base_Teeth_1.morphTargetInfluences
              }
            />
            <skinnedMesh
              castShadow
              receiveShadow
              frustumCulled={false}
              name="CC_Base_Teeth_2"
              geometry={nodes.CC_Base_Teeth_2.geometry}
              material={materials.Std_Lower_Teeth}
              skeleton={nodes.CC_Base_Teeth_2.skeleton}
              morphTargetDictionary={
                nodes.CC_Base_Teeth_2.morphTargetDictionary
              }
              morphTargetInfluences={
                nodes.CC_Base_Teeth_2.morphTargetInfluences
              }
            />
          </group>
          <skinnedMesh
            castShadow
            receiveShadow
            frustumCulled={false}
            name="CC_Base_Tongue"
            geometry={nodes.CC_Base_Tongue.geometry}
            material={materials.Std_Tongue}
            skeleton={nodes.CC_Base_Tongue.skeleton}
            morphTargetDictionary={nodes.CC_Base_Tongue.morphTargetDictionary}
            morphTargetInfluences={nodes.CC_Base_Tongue.morphTargetInfluences}
          />
          <group name="CC_Game_Eye">
            <skinnedMesh
              castShadow
              receiveShadow
              frustumCulled={false}
              name="CC_Game_Eye_1"
              geometry={nodes.CC_Game_Eye_1.geometry}
              material={materials.Ga_Eye_R}
              skeleton={nodes.CC_Game_Eye_1.skeleton}
              morphTargetDictionary={nodes.CC_Game_Eye_1.morphTargetDictionary}
              morphTargetInfluences={nodes.CC_Game_Eye_1.morphTargetInfluences}
            />
            <skinnedMesh
              castShadow
              receiveShadow
              frustumCulled={false}
              name="CC_Game_Eye_2"
              geometry={nodes.CC_Game_Eye_2.geometry}
              material={materials.Ga_Eye_L}
              skeleton={nodes.CC_Game_Eye_2.skeleton}
              morphTargetDictionary={nodes.CC_Game_Eye_2.morphTargetDictionary}
              morphTargetInfluences={nodes.CC_Game_Eye_2.morphTargetInfluences}
            />
          </group>
          <group name="CC_Base_EyeOcclusion">
            <skinnedMesh
              castShadow
              receiveShadow
              frustumCulled={false}
              name="CC_Base_EyeOcclusion_1"
              geometry={nodes.CC_Base_EyeOcclusion_1.geometry}
              material={materials.Std_Eye_Occlusion_R}
              skeleton={nodes.CC_Base_EyeOcclusion_1.skeleton}
              morphTargetDictionary={
                nodes.CC_Base_EyeOcclusion_1.morphTargetDictionary
              }
              morphTargetInfluences={
                nodes.CC_Base_EyeOcclusion_1.morphTargetInfluences
              }
            />
            <skinnedMesh
              castShadow
              receiveShadow
              frustumCulled={false}
              name="CC_Base_EyeOcclusion_2"
              geometry={nodes.CC_Base_EyeOcclusion_2.geometry}
              material={materials.Std_Eye_Occlusion_L}
              skeleton={nodes.CC_Base_EyeOcclusion_2.skeleton}
              morphTargetDictionary={
                nodes.CC_Base_EyeOcclusion_2.morphTargetDictionary
              }
              morphTargetInfluences={
                nodes.CC_Base_EyeOcclusion_2.morphTargetInfluences
              }
            />
          </group> */}
        </group>
        <group name="JoroNoGun" scale={0.1}>
          <primitive object={nodes.Shadow_Catcher} />
        </group>
      </group>
    </group>
  );
}

// useGLTF.preload("/Assets/JoroArmor1Frame.glb");
