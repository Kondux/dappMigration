/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";

export default function HDGrey({
  eyecolor,
  color,
  animationClip,
  skin,
  ...props
}) {
  const group = useRef();

  const { nodes, materials } = useGLTF("/HDGrey-transformed.glb");

  const { materials: MATS } = useGLTF("/GreyV1-transformed.glb");

  const { animations } = useGLTF("/Dance.glb");
  //   const { nodes: armornodes, materials: armormaterials, animations: armoranimations} = useGLTF(
  //     "/armor.glb"
  // );

  // Pull animation from this glb
  // const { animations } = useGLTF("/RealGreyAnim.glb");
  const { actions } = useAnimations(animations, group);
  // console.log("This is Nodes GREY", nodes);
  // console.log("This is ACTIONS GREY", actions);

  // useEffect(() => {
  //     // console.log("This is BAYC MODEL ACTIONS", actions);
  //     setTimeout(() => {
  //         // actions["CC_Base|FBXExportClip_0.001"].setEffectiveWeight(1);
  //         actions["CC_Base|FBXExportClip_0"].play();
  //     }, 0);
  // });

  useEffect(() => {
    console.log("This is BAYC MODEL ACTIONS", actions);
    // console.log("This is BAYC MODEL AC", animationClip);
    if (animationClip === "1") {
      setTimeout(() => {
        // console.log("1 clip");
        // actions["CC_Base|FBXExportClip_0.001"].setEffectiveWeight(1);
        if (actions["CC_Base|FBXExportClip_0"]._effectiveTimeScale === 0) {
          actions["CC_Base|FBXExportClip_0"].setEffectiveTimeScale(1);
        } else {
          actions["CC_Base|FBXExportClip_0"].play();
        }
      }, 0);
    } else {
      setTimeout(() => {
        // console.log("2 clip");
        // actions["CC_Base|FBXExportClip_0.001"].setEffectiveWeight(1);
        actions["CC_Base|FBXExportClip_0"].setEffectiveTimeScale(0);
      }, 0);
    }

    // setTimeout(() => {
    //     // actions["CC_Base|FBXExportClip_0.001"].setEffectiveWeight(1);
    //     actions["CC_Base|FBXExportClip_0"].play();
    // }, 0);
  }, [animationClip]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="GreyNano4kStrength100001" scale={1.5}>
          <primitive object={nodes.CC_Base_BoneRoot} />

          <skinnedMesh
            frustumCulled={false}
            name="Nano_M_Suit_H"
            geometry={nodes.Nano_M_Suit_H.geometry}
            material={materials.Nano_M_Suit_H_Merge}
            material-color={color}
            skeleton={nodes.Nano_M_Suit_H.skeleton}
          />

          <group name="CC_Base_Body">
            <skinnedMesh
              frustumCulled={false}
              name="CC_Base_Body_1"
              geometry={nodes.CC_Base_Body_1.geometry}
              material={materials.Std_Skin_Head}
              material-color={skin}
              skeleton={nodes.CC_Base_Body_1.skeleton}
              morphTargetDictionary={nodes.CC_Base_Body_1.morphTargetDictionary}
              morphTargetInfluences={nodes.CC_Base_Body_1.morphTargetInfluences}
            />
            <skinnedMesh
              frustumCulled={false}
              name="CC_Base_Body_2"
              geometry={nodes.CC_Base_Body_2.geometry}
              material={materials.Std_Skin_Body}
              material-color={skin}
              skeleton={nodes.CC_Base_Body_2.skeleton}
              morphTargetDictionary={nodes.CC_Base_Body_2.morphTargetDictionary}
              morphTargetInfluences={nodes.CC_Base_Body_2.morphTargetInfluences}
            />
            <skinnedMesh
              frustumCulled={false}
              name="CC_Base_Body_3"
              geometry={nodes.CC_Base_Body_3.geometry}
              material={materials.Std_Skin_Arm}
              material-color={skin}
              skeleton={nodes.CC_Base_Body_3.skeleton}
              morphTargetDictionary={nodes.CC_Base_Body_3.morphTargetDictionary}
              morphTargetInfluences={nodes.CC_Base_Body_3.morphTargetInfluences}
            />
            <skinnedMesh
              frustumCulled={false}
              name="CC_Base_Body_4"
              geometry={nodes.CC_Base_Body_4.geometry}
              material={materials.Std_Skin_Leg}
              material-color={skin}
              skeleton={nodes.CC_Base_Body_4.skeleton}
              morphTargetDictionary={nodes.CC_Base_Body_4.morphTargetDictionary}
              morphTargetInfluences={nodes.CC_Base_Body_4.morphTargetInfluences}
            />
            <skinnedMesh
              frustumCulled={false}
              name="CC_Base_Body_5"
              geometry={nodes.CC_Base_Body_5.geometry}
              material={materials.Std_Nails}
              skeleton={nodes.CC_Base_Body_5.skeleton}
              morphTargetDictionary={nodes.CC_Base_Body_5.morphTargetDictionary}
              morphTargetInfluences={nodes.CC_Base_Body_5.morphTargetInfluences}
            />
            <skinnedMesh
              frustumCulled={false}
              name="CC_Base_Body_6"
              geometry={nodes.CC_Base_Body_6.geometry}
              material={materials.Std_Eyelash}
              skeleton={nodes.CC_Base_Body_6.skeleton}
              morphTargetDictionary={nodes.CC_Base_Body_6.morphTargetDictionary}
              morphTargetInfluences={nodes.CC_Base_Body_6.morphTargetInfluences}
            />
          </group>
          <skinnedMesh
            frustumCulled={false}
            name="CC_Base_Tongue"
            geometry={nodes.CC_Base_Tongue.geometry}
            material={materials.Std_Tongue}
            skeleton={nodes.CC_Base_Tongue.skeleton}
            morphTargetDictionary={nodes.CC_Base_Tongue.morphTargetDictionary}
            morphTargetInfluences={nodes.CC_Base_Tongue.morphTargetInfluences}
          />
          <group name="CC_Base_Teeth">
            <skinnedMesh
              frustumCulled={false}
              name="CC_Base_Teeth_1"
              geometry={nodes.CC_Base_Teeth_1.geometry}
              material={materials.Std_Upper_Teeth}
              skeleton={nodes.CC_Base_Teeth_1.skeleton}
              morphTargetDictionary={
                nodes.CC_Base_Teeth_1.morphTargetDictionary
              }
              morphTargetInfluences={
                nodes.CC_Base_Teeth_1.morphTargetInfluences
              }
            />
            <skinnedMesh
              frustumCulled={false}
              name="CC_Base_Teeth_2"
              geometry={nodes.CC_Base_Teeth_2.geometry}
              material={materials.Std_Lower_Teeth}
              skeleton={nodes.CC_Base_Teeth_2.skeleton}
              morphTargetDictionary={
                nodes.CC_Base_Teeth_2.morphTargetDictionary
              }
              morphTargetInfluences={
                nodes.CC_Base_Teeth_2.morphTargetInfluences
              }
            />
          </group>
          <group name="CC_Game_Eye">
            <skinnedMesh
              frustumCulled={false}
              name="CC_Game_Eye_1"
              geometry={nodes.CC_Game_Eye_1.geometry}
              material={MATS.Ga_Eye_R}
              skeleton={nodes.CC_Game_Eye_1.skeleton}
              morphTargetDictionary={nodes.CC_Game_Eye_1.morphTargetDictionary}
              material-color={eyecolor}
              morphTargetInfluences={nodes.CC_Game_Eye_1.morphTargetInfluences}
            />
            <skinnedMesh
              frustumCulled={false}
              name="CC_Game_Eye_2"
              geometry={nodes.CC_Game_Eye_2.geometry}
              material={MATS.Ga_Eye_L}
              skeleton={nodes.CC_Game_Eye_2.skeleton}
              morphTargetDictionary={nodes.CC_Game_Eye_2.morphTargetDictionary}
              material-color={eyecolor}
              morphTargetInfluences={nodes.CC_Game_Eye_2.morphTargetInfluences}
            />
          </group>
          {/* <group name="CC_Base_EyeOcclusion">
                        <skinnedMesh
                            frustumCulled={false}
                            name="CC_Base_EyeOcclusion_1"
                            geometry={nodes.CC_Base_EyeOcclusion_1.geometry}
                            material={materials.Std_Eye_Occlusion_R}
                            skeleton={nodes.CC_Base_EyeOcclusion_1.skeleton}
                            morphTargetDictionary={
                                nodes.CC_Base_EyeOcclusion_1
                                    .morphTargetDictionary
                            }
                            morphTargetInfluences={
                                nodes.CC_Base_EyeOcclusion_1
                                    .morphTargetInfluences
                            }
                        />
                        <skinnedMesh
                            frustumCulled={false}
                            name="CC_Base_EyeOcclusion_2"
                            geometry={nodes.CC_Base_EyeOcclusion_2.geometry}
                            material={materials.Std_Eye_Occlusion_L}
                            skeleton={nodes.CC_Base_EyeOcclusion_2.skeleton}
                            morphTargetDictionary={
                                nodes.CC_Base_EyeOcclusion_2
                                    .morphTargetDictionary
                            }
                            morphTargetInfluences={
                                nodes.CC_Base_EyeOcclusion_2
                                    .morphTargetInfluences
                            }
                        />
                    </group> */}
          <group name="CC_Base_TearLine">
            <skinnedMesh
              frustumCulled={false}
              name="CC_Base_TearLine_1"
              geometry={nodes.CC_Base_TearLine_1.geometry}
              material={materials.Std_Tearline_R}
              skeleton={nodes.CC_Base_TearLine_1.skeleton}
              morphTargetDictionary={
                nodes.CC_Base_TearLine_1.morphTargetDictionary
              }
              morphTargetInfluences={
                nodes.CC_Base_TearLine_1.morphTargetInfluences
              }
            />
            <skinnedMesh
              frustumCulled={false}
              name="CC_Base_TearLine_2"
              geometry={nodes.CC_Base_TearLine_2.geometry}
              material={materials.Std_Tearline_L}
              skeleton={nodes.CC_Base_TearLine_2.skeleton}
              morphTargetDictionary={
                nodes.CC_Base_TearLine_2.morphTargetDictionary
              }
              morphTargetInfluences={
                nodes.CC_Base_TearLine_2.morphTargetInfluences
              }
            />
          </group>
        </group>
        <group name="GreyNano4kStrength100" scale={1.5}>
          <group name="Shadow_Catcher" rotation={[-Math.PI / 2, 0, 0]}>
            <group name="CC_Base_Pivot" position={[0, 0, -1.53]}>
              <group name="Plane_001" position={[0, 0, 1.59]} />
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

// useGLTF.preload("/HDGrey-transformed.glb");
