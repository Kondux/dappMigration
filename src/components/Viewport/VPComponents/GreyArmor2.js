/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useState, useRef } from "react";
import { useGLTF, useTexture, useAnimations } from "@react-three/drei";

export default function GreyArmor2({
  eyecolor,
  color,
  armor,
  skin,
  head,
  weapon,
  armorVariant,
  animationClip,
  ...props
}) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/GreyArmor2.glb");

  const [armorVar, setArmorVar] = useState("");

  // Skin var decides body texture
  useEffect(() => {
    // console.log("THIS IS SKIN", skin);
    if (armorVariant === "White") {
      setArmorVar("White_");
    } else if (armorVariant === "Black") {
      setArmorVar("Black_");
    } else {
      setArmorVar("");
    }
  }, [armorVariant]);

  // Armor var decides armor variant

  // console.log("This is material", materials.Std_Skin_Head);

  // const skinHeadMaps = useTexture({
  //   map: `/maps/${skinVar}Std_Skin_Head__Diffuse.png`,
  //   // displacementMap: 'PavingStones092_1K_Displacement.jpg',
  //   normalMap: `/maps/${skinVar}Std_Skin_Head__Normal.png`,
  //   // roughnessMap: `/maps/${skinVar}Std_Skin_Head__Roughness.png`,
  //   // aoMap: `/maps/${skinVar}Std_Skin_Head__AO.png`,
  // });

  const armorMaps = useTexture({
    map: `/maps/GreyArmor2/${armorVar}Diffuse.png`,
    // displacementMap: 'PavingStones092_1K_Displacement.jpg',
    normalMap: `/maps/GreyArmor2/Normal.png`,
    // roughnessMap: `/maps/${skinVar}Std_Skin_Head__Roughness.png`,
    // aoMap: `/maps/${skinVar}Std_Skin_Head__AO.png`,
  });

  const { actions } = useAnimations(animations, group);
  return (
    <group ref={group} {...props} dispose={null}>
      <group>
        <group name="BlenderGrey" scale={0.01}>
          <primitive object={nodes.CC_Base_BoneRoot} />
          <group name="CC_Base_Body" />
          <group name="Nano_M_Suit_H" />
          <skinnedMesh
            castShadow
            receiveShadow
            frustumCulled={false}
            name="Nano_M_Suit_H_1"
            geometry={nodes.Nano_M_Suit_H_1.geometry}
            // material={materials.Nano_M_Suit_H_Merge}
            skeleton={nodes.Nano_M_Suit_H_1.skeleton}
          >
            <meshStandardMaterial
              roughness={0.3}
              metalness={0}
              {...armorMaps}
            />
          </skinnedMesh>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/GreyArmor2.glb");
