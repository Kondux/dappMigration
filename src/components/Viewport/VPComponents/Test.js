/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";

export default function Test({ color, ...props }) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/Test-transformed.glb");
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    console.log("This is Test MODEL ACTIONS", actions);
    setTimeout(() => {
      actions["Armature|mixamo.com|Layer0"].play();
    }, 0);
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <group>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group>
            <group>
              <group
                position={[7.88, 6.93, -179.4]}
                rotation={[-Math.PI / 2, 0, 0.85]}
                scale={5.99}
              />
              <group
                position={[-7.34, 6.98, -179.42]}
                rotation={[-Math.PI / 2, 0, 0.85]}
                scale={5.99}
              />
              <group rotation={[-Math.PI / 2, 0, 0]} scale={100} />
              <group rotation={[-Math.PI / 2, 0, 0]} scale={100} />
              <group rotation={[-Math.PI / 2, 0, 0]} scale={100} />
            </group>
          </group>
        </group>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01} />
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh
            geometry={nodes.Mag.geometry}
            material={materials.Material_010}
            skeleton={nodes.Mag.skeleton}
          />
          <skinnedMesh
            geometry={nodes.MaleBaseMesh1.geometry}
            material={materials.Material_013}
            skeleton={nodes.MaleBaseMesh1.skeleton}
          />
          <skinnedMesh
            geometry={nodes.MaleBaseMesh_0021.geometry}
            material={materials.Material_008}
            skeleton={nodes.MaleBaseMesh_0021.skeleton}
            material-color={color}
          />
          <skinnedMesh
            geometry={nodes.Sphere_001.geometry}
            material={materials.Material_012}
            skeleton={nodes.Sphere_001.skeleton}
          />
          <skinnedMesh
            geometry={nodes.Sphere_004.geometry}
            material={materials.Material_0120}
            skeleton={nodes.Sphere_004.skeleton}
          />
        </group>
      </group>
    </group>
  );
}

// useGLTF.preload("/Test-transformed.glb");
