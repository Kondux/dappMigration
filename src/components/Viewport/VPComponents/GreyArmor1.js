/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useState, useRef } from "react";
import { useGLTF, useTexture, useAnimations } from "@react-three/drei";

export default function GreyArmor1({
  eyecolor,
  color,
  armor,
  skin,
  head,
  weapon,
  armorVariant,
  animationClip,
  ...props
}) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/GreyArmor1.glb");

  const [armorVar, setArmorVar] = useState("");

  // Skin var decides body texture
  useEffect(() => {
    // console.log("THIS IS SKIN", skin);
    if (armorVariant === "White") {
      setArmorVar("White_");
    } else if (armorVariant === "Black") {
      setArmorVar("Black_");
    } else {
      setArmorVar("");
    }
  }, [armorVariant]);

  // Armor var decides armor variant

  // console.log("This is material", materials.Std_Skin_Head);

  // const skinHeadMaps = useTexture({
  //   map: `/maps/${skinVar}Std_Skin_Head__Diffuse.png`,
  //   // displacementMap: 'PavingStones092_1K_Displacement.jpg',
  //   normalMap: `/maps/${skinVar}Std_Skin_Head__Normal.png`,
  //   // roughnessMap: `/maps/${skinVar}Std_Skin_Head__Roughness.png`,
  //   // aoMap: `/maps/${skinVar}Std_Skin_Head__AO.png`,
  // });

  const armorUpperMaps = useTexture({
    map: `/maps/GreyArmor1/${armorVar}Upper_Diffuse.png`,
    // displacementMap: 'PavingStones092_1K_Displacement.jpg',
    normalMap: `/maps/GreyArmor1/Upper_Normal.png`,
    // roughnessMap: `/maps/${skinVar}Std_Skin_Head__Roughness.png`,
    // aoMap: `/maps/${skinVar}Std_Skin_Head__AO.png`,
  });

  const armorLowerMaps = useTexture({
    map: `/maps/GreyArmor1/${armorVar}Lower_Diffuse.png`,
    // displacementMap: 'PavingStones092_1K_Displacement.jpg',
    normalMap: `/maps/GreyArmor1/Lower_Normal.png`,
    // roughnessMap: `/maps/${skinVar}Std_Skin_Head__Roughness.png`,
    // aoMap: `/maps/${skinVar}Std_Skin_Head__AO.png`,
  });

  const { actions } = useAnimations(animations, group);
  return (
    <group ref={group} {...props} dispose={null}>
      <group>
        <group name="ScaleGreyTest" scale={0.01}>
          <primitive object={nodes.CC_Base_BoneRoot} />
          <group name="CC_Base_Body" />
          <group name="PRCCM_SF2Suit" />
          <group name="CC_Base_Body_1">
            <1
              name="CC_Base_Body_primitive2"
              geometry={nodes.CC_Base_Body_primitive2.geometry}
              material={materials.Std_Skin_Arm}
              skeleton={nodes.CC_Base_Body_primitive2.skeleton}
            />
            <skinnedMesh
              castShadow
              receiveShadow
              frustumCulled={false}
              name="CC_Base_Body_primitive4"
              geometry={nodes.CC_Base_Body_primitive4.geometry}
              material={materials.Std_Nails}
              skeleton={nodes.CC_Base_Body_primitive4.skeleton}
            />
          </group>
          <group name="PRCCM_SF2Suit_1">
            <skinnedMesh
              castShadow
              receiveShadow
              frustumCulled={false}
              name="PRCCM_SF2Suit_primitive0"
              geometry={nodes.PRCCM_SF2Suit_primitive0.geometry}
              // material={materials.PRCCM_SF2Suit_Upper}
              skeleton={nodes.PRCCM_SF2Suit_primitive0.skeleton}
            >
              <meshStandardMaterial
                // roughness={0.3}
                // metalness={0}
                {...armorUpperMaps}
              />
            </skinnedMesh>

            <skinnedMesh
              castShadow
              receiveShadow
              frustumCulled={false}
              name="PRCCM_SF2Suit_primitive1"
              geometry={nodes.PRCCM_SF2Suit_primitive1.geometry}
              // material={materials.PRCCM_SF2Suit_Lower}
              skeleton={nodes.PRCCM_SF2Suit_primitive1.skeleton}
            >
              <meshStandardMaterial
                // roughness={0.3}
                // metalness={0}
                {...armorLowerMaps}
              />
            </skinnedMesh>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/GreyArmor1.glb");
