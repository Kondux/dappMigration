/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: re1monsen (https://sketchfab.com/re1monsen)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/scifi-crate-container-e6c020aea0434ee884c5642464d16c39
title: Scifi Crate Container
*/

import React, { useRef, useState, useEffect } from "react";
import { useFrame } from "@react-three/fiber";
import { useGLTF, useAnimations } from "@react-three/drei";
import * as THREE from "three";
import { useSpring, a } from "@react-spring/three";

export default function Model({ ...props }) {
  const [audio, setAudio] = useState(null);
  useEffect(() => {
    setAudio(new Audio("/open-chest.mp3"));
    // only run once on the first render on the client
  }, []);

  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/crate3-transformed.glb");

  console.log(animations);
  // const actions = useRef();
  const { actions } = useAnimations(animations, group);

  const [mixer] = useState(() => new THREE.AnimationMixer());
  useFrame((state, delta) => mixer.update(delta));

  // useEffect(() => {
  //     actions.current = {
  //         ArmatureAction: mixer.clipAction(animations[0], group.current),
  //     };
  //     return () => animations.forEach((clip) => mixer.uncacheClip(clip));
  // }, [animations, mixer]);

  // function for the chest open & audio
  const handleAnimation = () => {
    props.setOpen(!props.open);
    actions["Loop"].play();
    audio.volume = 0.3;
    audio.play();
  };

  // Chest open animation
  const chestOpen = useSpring({
    rotation: props.open ? [0, 0, 0] : [1.61, 0, 0],
    position: props.open ? [0, -1.5, 0] : [0, 0, 0],
  });

  return (
    <group onClick={handleAnimation} ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group
          name="Sketchfab_model"
          rotation={[-Math.PI / 2, 0, 0]}
          scale={0.5}
        >
          <group name="root">
            <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
              <group
                name="crate001_low_1"
                rotation={[Math.PI / 2, -1.22, 0]}
                scale={0.99}
              >
                <mesh
                  name="Object_6"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_6.geometry}
                  material={materials.crate}
                />
              </group>
              <group name="crate011_low_6">
                <mesh
                  name="Object_16"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_16.geometry}
                  material={materials.crate}
                />
              </group>
              <group name="crate007_low_8">
                <mesh
                  name="Object_20"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_20.geometry}
                  material={materials.crate_2}
                />
              </group>
              <group name="crate008_low_9">
                <mesh
                  name="Object_22"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_22.geometry}
                  material={materials.crate_2}
                />
              </group>
              <group name="crate010_low_11">
                <mesh
                  name="Object_26"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_26.geometry}
                  material={materials.crate}
                />
              </group>
              <group name="crate013_low_12">
                <mesh
                  name="Object_28"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_28.geometry}
                  material={materials.crate}
                />
              </group>
              <group
                name="crate014_low_14"
                position={[-0.54, -0.21, 0.72]}
                rotation={[0, 0, 0.37]}
              >
                <mesh
                  name="Object_32"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_32.geometry}
                  material={materials.crate_2}
                />
              </group>
              <group
                name="crate015_low_15"
                castShadow
                receiveShadow
                position={[-0.1, -0.04, 0.71]}
                rotation={[Math.PI / 2, 0.02, 0]}
                scale={[0.01, 0, 0.01]}
              >
                <mesh
                  name="Object_34"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_34.geometry}
                  material={materials.crate_2}
                />
              </group>
              <group name="crate_low1_16">
                <mesh
                  name="Object_36"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_36.geometry}
                  material={materials.crate}
                />
              </group>
              <group name="ground_low_0">
                {/* <mesh
                                    name="Object_4"
                                    geometry={nodes.Object_4.geometry}
                                    material={materials.ground}
                                /> */}
              </group>
              <group name="crate002_low_2" scale={0.99}>
                <mesh
                  name="Object_8"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_8.geometry}
                  material={materials.crate}
                />
              </group>
              <group name="crate003_low_3" position={[0.01, 0, 0]}>
                <mesh
                  name="Object_10"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_10.geometry}
                  material={materials.crate}
                />
              </group>
              <group name="crate005_low_4" position={[0.01, 0, 0]}>
                <mesh
                  name="Object_12"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_12.geometry}
                  material={materials.crate}
                />
              </group>
              <group name="crate004_low_5" position={[0.01, 0, 0]}>
                <mesh
                  name="Object_14"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_14.geometry}
                  material={materials.crate}
                />
              </group>
              <group name="crate006_low_7" position={[0, 0, -0.01]}>
                <mesh
                  name="Object_18"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_18.geometry}
                  material={materials.crate_2}
                />
              </group>
              <group name="crate009_low_10">
                <mesh
                  name="Object_24"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_24.geometry}
                  material={materials.crate}
                />
              </group>
              <group name="crate012_low_13">
                <mesh
                  name="Object_30"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_30.geometry}
                  material={materials.crate}
                />
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

// useGLTF.preload("/crate3-transformed.glb");
